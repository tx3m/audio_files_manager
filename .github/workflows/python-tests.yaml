name: Enhanced Audio File Manager Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        exclude:
          # Exclude some combinations to reduce CI time
          - os: macos-latest
            python-version: '3.7'
          - os: windows-latest
            python-version: '3.7'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev python3-dev portaudio19-dev

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install portaudio

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install .

    - name: Install all optional dependencies for comprehensive testing
      run: |
        pip install .[all]

    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Test import and basic functionality
      run: |
        python -c "
        from audio_file_manager import AudioFileManager, LegacyServiceAdapter
        print('Successfully imported AudioFileManager and LegacyServiceAdapter')
        
        # Test basic initialization
        manager = AudioFileManager()
        print(f'AudioFileManager initialized with backend: {type(manager.audio_backend).__name__}')
        
        # Test legacy adapter
        adapter = LegacyServiceAdapter(manager)
        print('LegacyServiceAdapter initialized successfully')
        
        # Cleanup
        manager.cleanup()
        print('All basic functionality tests passed')
        "

    - name: Test enhanced examples
      run: |
        python -c "
        from enhanced_record_example import EnhancedInteractiveAudioTester
        tester = EnhancedInteractiveAudioTester()
        print('Enhanced record example initialized successfully')
        tester.manager.cleanup()
        "

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8

    - name: Run black (code formatting check)
      run: |
        black --check --diff audio_file_manager/ || echo "Code formatting issues found. Run 'black audio_file_manager/' to fix."

    - name: Run flake8 (linting)
      run: |
        flake8 audio_file_manager/ --max-line-length=100 --ignore=E203,W503 || echo "Linting issues found."